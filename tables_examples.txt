EXAMPLE 0

for (int i = 0; i < m; i++) {
    for (int j = 0; i < m; i++) {
// vec_out[i] = vec_out[i] + matrix[i][j] * vec_in[j];

       array index                 
ij    0  1  2  3  4  src

00    0              -        (input)
01    0              i,   j-1
02    0              i,   j-1
10       1           -        (input)
11       1           i,   j-1
12       1           i,   j-1
20          2        -        (input)
21          2        i,   j-1
22          2        i,   j-1

EXAMPLE 1
Нахождение суммы элементов массива сдваиванием

for(int i=1;i<=h;i++)
    for(int j=0;j<arr_size;j++)
        if(j<(arr_size/(pow(2,i))))
            arr[j]=arr[j*2]+arr[2*j+1];

// arr[j]=arr[j*2]+arr[2*j+1];

       array index                 
ij    0   1   2   3   4   5   6   7   src

10   0+1                              - (input x2)
11       2+3                          - (input x2)
12           4+5                      - (input x2)
13               6+7                  - (input x2)
14                                    -
15                                    -
16                                    -        
17                                    -
20   0+1                              - i-1, j      i-1, j+1
21       2+3                          - i-1, j+1    i-1, j+2
22                                    -       
23                                    -
24                                    -
25                                    -
26                                    -        
27                                    -
30   0+1                              - i-1, j      i-1, j+1
31                                    - 
32                                    -       
33                                    -
34                                    -
35                                    -
36                                    -        
37                                    -

EXAMPLE 2
Перемножение матриц

for ( int i=0; i<2;i++) {
    for (int j=0; j<2;j++) {
        matrix_out[i][j]=4;
        
        for(int k=0; k<2;k++)
            matrix_out[i][j] = matrix_out[i][j]; // + matrix_1[i][k] * matrix_2[k][j];
    }
}

t0       array index                 
n  ij    00  01  10  11  src / bsrc

0  00    c               - (input)
3  01        c           - (input)
6  10            c       - (input)
9  11                c   - (input)


t1       array index                 
n  ijk   00  01  10  11  src / bsrc

1  000   00              bsrc (0, 00 )  
2  001   00              src  (1, 000) 
4  010       01          bsrc (0, 01 )  
5  011       01          src  (1, 010) 
7  100           10      bsrc (0, 10 )  
8  101           10      src  (1, 100) 
10 110               11  bsrc (0, 11 )
11 111               11  src  (1, 110) 

EXAMPLE 3

for (i = 2)
    for (j = 4)
        vec_out[i * j] = vec_out[  i  ]; // + matrix[  i  ][j] * vec_in[j]; // table (0)
        vec_out[i + j] = vec_out[  i  ]; // + matrix[  i  ][j] * vec_in[j]; // table (1)

Нужно из дерева узнать расписание операций

[i * j] = [i]
table (0)          vec_out index                 
global_iter  ij    0  1  2  3  4  src(table_n, ij)

0            00    0              input      +
2            01    0              src(1, 00) +
4            02    0              src(1, 00) +
6            10    1              src(1, 01) +
8            11       1           src(1, 10) +
10           12          1        src(1, 11)
12           20    2              src(0, 10)
14           21          2        src(1, 20)
16           22                2  src(0, 21)


[i + j] = [i]
table (1)          vec_out index                 
global_iter  ij    0  1  2  3  4  src(table_n, ij)

1            00    0              src(0, 00) +
3            01       0           src(0, 01) +
5            02          0        src(1, 00) +    
7            10       1           src(1, 01) +
9            11          1        src(1, 02) 
11           12             1     src(1, 10)     
13           20          2        src(0, 12)      
15           21             2     src(1, 12)     
17           22                2  src(0, 22)